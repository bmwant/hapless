name: "# Draft New Release #"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version you want to release (format: vX.X.X)"
        required: true

env:
  POETRY_VERSION: "1.2.1"

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create release candidate branch
        run: |
          git checkout -b rc/${{ github.event.inputs.version }}

      # Bump and populate the changelog according to https://keepachangelog.com/en/1.0.0/
      - name: Update changelog
        uses: misha-brt/keep-a-changelog-new-release@latest
        with:
          version: ${{ github.event.inputs.version }}

      # In order to make a commit, we need to initialize a user
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      # Install Poetry package manager
      - name: Install Poetry
        uses: snok/install-poetry@v1
        # NOTE: pin to a specific Poetry version if needed
        # with:
        #   version: ${{ env.POETRY_VERSION }}

      # Bump package version with Poetry
      - name: Bump version
        run: |
          SEMVER="$(echo ${{ github.event.inputs.version }} | sed 's/^v//')"
          poetry version ${SEMVER}
          echo "Bumped the version to ${SEMVER}!"

      # Commit changes made
      - name: Commit changes
        id: make-commit
        # TODO: `set-output` is deprecated
        run: |
          git add CHANGELOG.md pyproject.toml
          git commit --message "Prepare release ${{ github.event.inputs.version }} changes"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: |
          git push origin rc/${{ github.event.inputs.version }}

      - name: Create pull request
        uses: misha-brt/create-pull-request@latest
        # NOTE: override Github token if needed
        # env:
        #   GITHUB_TOKEN: ""
        with:
          head: rc/${{ github.event.inputs.version }}
          base: release
          title: Release ${{ github.event.inputs.version }}
          # By default, request a review from the person who triggered the workflow
          reviewers: ${{ github.actor }}
          body: |
            This release was manually triggered by @${{ github.actor }} from this workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            Github Actions automatically bumped the version and updated changelog with this commit: ${{ steps.make-commit.outputs.commit }}.
            Merging this PR will create a GitHub release and tag from the updated release branch.
