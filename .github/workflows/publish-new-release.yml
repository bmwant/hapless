name: "Publish new release"

on:
  pull_request:
    branches:
      - release
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    # NOTE: only merged pull requests should trigger this job
    if: github.event.pull_request.merged == true
    steps:
      # Extract version from the branch name
      # TODO: just split by slash
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'rc/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#rc/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changelog entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ env.RELEASE_VERSION }}

      # Create Github release with notes and tag
      - name: Create release
        uses: misha-brt/create-release@v0.0.1
        # NOTE: override default Github token if needed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false

      - name: Merge release back into main branch
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/bmwant/hapless/merges \
            -f base='main' \
            -f head='release' \
            -f commit_message='Merge release into main'
        env:
          # NOTE: override default Github token if needed
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
